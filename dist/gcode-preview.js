!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).GCodePreview={},t.THREE)}(this,(function(t,e){"use strict";function n(t,e,n,i){return new(n||(n=Promise))((function(a,o){function r(t){try{c(i.next(t))}catch(t){o(t)}}function s(t){try{c(i.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,s)}c((i=i.apply(t,e||[])).next())}))}class i{constructor(){this.chars=""}static parse(t){const e=new i,n=t.split(" ");e.size=n[0];const a=e.size.split("x");return e.width=+a[0],e.height=+a[1],e.charLength=+n[1],e}get src(){return"data:image/jpeg;base64,"+this.chars}get isValid(){return this.chars.length==this.charLength&&/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(this.chars)}}class a{constructor(t,e,n,i){this.src=t,this.gcode=e,this.params=n,this.comment=i}}class o extends a{constructor(t,e,n,i){super(t,e,n,i),this.params=n}}class r{constructor(t,e,n){this.layer=t,this.commands=e,this.lineNumber=n}}class s{constructor(){this.lines=[],this.preamble=new r(-1,[],0),this.layers=[],this.curZ=0,this.maxZ=0,this.metadata={thumbnails:{}}}parseGCode(t){const e=Array.isArray(t)?t:t.split("\n");this.lines=this.lines.concat(e);const n=this.lines2commands(e);this.groupIntoLayers(n.filter((t=>t instanceof o)));const i=this.parseMetadata(n.filter((t=>t.comment))).thumbnails;for(const[t,e]of Object.entries(i))this.metadata.thumbnails[t]=e;return{layers:this.layers,metadata:this.metadata}}lines2commands(t){return t.map((t=>this.parseCommand(t)))}parseCommand(t,e=!0){const n=t.trim().split(";"),i=n[0],r=e&&n[1]||null,s=i.split(/ +/g),c=s[0].toLowerCase();let l;switch(c){case"g0":case"g1":return l=this.parseMove(s.slice(1)),new o(t,c,l,r);default:return l=this.parseParams(s.slice(1)),new a(t,c,l,r)}}parseMove(t){return t.reduce(((t,e)=>{const n=e.charAt(0).toLowerCase();return"x"!=n&&"y"!=n&&"z"!=n&&"e"!=n&&"f"!=n||(t[n]=parseFloat(e.slice(1))),t}),{})}isAlpha(t){const e=t.charCodeAt(0);return e>=97&&e<=122||e>=65&&e<=90}parseParams(t){return t.reduce(((t,e)=>{const n=e.charAt(0).toLowerCase();return this.isAlpha(n)&&(t[n]=parseFloat(e.slice(1))),t}),{})}groupIntoLayers(t){for(let e=0;e<t.length;e++){const n=t[e];if(!(n instanceof o)){this.currentLayer?this.currentLayer.commands.push(n):this.preamble.commands.push(n);continue}const i=n.params;i.z&&(this.curZ=i.z),i.e>0&&(null!=i.x||null!=i.y)&&this.curZ>this.maxZ?(this.maxZ=this.curZ,this.currentLayer=new r(this.layers.length,[n],e),this.layers.push(this.currentLayer)):this.currentLayer?this.currentLayer.commands.push(n):this.preamble.commands.push(n)}return this.layers}parseMetadata(t){const e={};let n=null;for(const a of t){const t=a.comment,o=t.indexOf("thumbnail begin"),r=t.indexOf("thumbnail end");o>-1?n=i.parse(t.slice(o+15).trim()):n&&(-1==r?n.chars+=t.trim():(n.isValid?(e[n.size]=n,console.debug("thumb found",n.size),console.debug("declared length",n.charLength,"actual length",n.chars.length)):console.warn("thumb found but seems to be invalid"),n=null))}return{thumbnails:e}}}s.prototype.parseGcode=s.prototype.parseGCode;const c={type:"change"},l={type:"start"},d={type:"end"};class u extends e.EventDispatcher{constructor(t,n){super(),this.object=t,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:e.MOUSE.ROTATE,MIDDLE:e.MOUSE.DOLLY,RIGHT:e.MOUSE.PAN},this.touches={ONE:e.TOUCH.ROTATE,TWO:e.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return s.phi},this.getAzimuthalAngle=function(){return s.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(t){t.addEventListener("keydown",Z),this._domElementKeyEvents=t},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(c),i.update(),o=a.NONE},this.update=function(){const n=new e.Vector3,l=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),d=l.clone().invert(),m=new e.Vector3,g=new e.Quaternion,v=2*Math.PI;return function(){const t=i.object.position;n.copy(t).sub(i.target),n.applyQuaternion(l),s.setFromVector3(n),i.autoRotate&&o===a.NONE&&P(2*Math.PI/60/60*i.autoRotateSpeed),i.enableDamping?(s.theta+=u.theta*i.dampingFactor,s.phi+=u.phi*i.dampingFactor):(s.theta+=u.theta,s.phi+=u.phi);let e=i.minAzimuthAngle,b=i.maxAzimuthAngle;return isFinite(e)&&isFinite(b)&&(e<-Math.PI?e+=v:e>Math.PI&&(e-=v),b<-Math.PI?b+=v:b>Math.PI&&(b-=v),s.theta=e<=b?Math.max(e,Math.min(b,s.theta)):s.theta>(e+b)/2?Math.max(e,s.theta):Math.min(b,s.theta)),s.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,s.phi)),s.makeSafe(),s.radius*=h,s.radius=Math.max(i.minDistance,Math.min(i.maxDistance,s.radius)),!0===i.enableDamping?i.target.addScaledVector(p,i.dampingFactor):i.target.add(p),n.setFromSpherical(s),n.applyQuaternion(d),t.copy(i.target).add(n),i.object.lookAt(i.target),!0===i.enableDamping?(u.theta*=1-i.dampingFactor,u.phi*=1-i.dampingFactor,p.multiplyScalar(1-i.dampingFactor)):(u.set(0,0,0),p.set(0,0,0)),h=1,!!(f||m.distanceToSquared(i.object.position)>r||8*(1-g.dot(i.object.quaternion))>r)&&(i.dispatchEvent(c),m.copy(i.object.position),g.copy(i.object.quaternion),f=!1,!0)}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",X),i.domElement.removeEventListener("pointerdown",k),i.domElement.removeEventListener("pointercancel",Y),i.domElement.removeEventListener("wheel",W),i.domElement.removeEventListener("pointermove",F),i.domElement.removeEventListener("pointerup",G),null!==i._domElementKeyEvents&&i._domElementKeyEvents.removeEventListener("keydown",Z)};const i=this,a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let o=a.NONE;const r=1e-6,s=new e.Spherical,u=new e.Spherical;let h=1;const p=new e.Vector3;let f=!1;const m=new e.Vector2,g=new e.Vector2,v=new e.Vector2,b=new e.Vector2,y=new e.Vector2,w=new e.Vector2,x=new e.Vector2,S=new e.Vector2,E=new e.Vector2,L=[],A={};function O(){return Math.pow(.95,i.zoomSpeed)}function P(t){u.theta-=t}function T(t){u.phi-=t}const z=function(){const t=new e.Vector3;return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),p.add(t)}}(),M=function(){const t=new e.Vector3;return function(e,n){!0===i.screenSpacePanning?t.setFromMatrixColumn(n,1):(t.setFromMatrixColumn(n,0),t.crossVectors(i.object.up,t)),t.multiplyScalar(e),p.add(t)}}(),_=function(){const t=new e.Vector3;return function(e,n){const a=i.domElement;if(i.object.isPerspectiveCamera){const o=i.object.position;t.copy(o).sub(i.target);let r=t.length();r*=Math.tan(i.object.fov/2*Math.PI/180),z(2*e*r/a.clientHeight,i.object.matrix),M(2*n*r/a.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(z(e*(i.object.right-i.object.left)/i.object.zoom/a.clientWidth,i.object.matrix),M(n*(i.object.top-i.object.bottom)/i.object.zoom/a.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function U(t){i.object.isPerspectiveCamera?h/=t:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*t)),i.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function C(t){i.object.isPerspectiveCamera?h*=t:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/t)),i.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function D(t){m.set(t.clientX,t.clientY)}function B(t){b.set(t.clientX,t.clientY)}function I(){if(1===L.length)m.set(L[0].pageX,L[0].pageY);else{const t=.5*(L[0].pageX+L[1].pageX),e=.5*(L[0].pageY+L[1].pageY);m.set(t,e)}}function j(){if(1===L.length)b.set(L[0].pageX,L[0].pageY);else{const t=.5*(L[0].pageX+L[1].pageX),e=.5*(L[0].pageY+L[1].pageY);b.set(t,e)}}function N(){const t=L[0].pageX-L[1].pageX,e=L[0].pageY-L[1].pageY,n=Math.sqrt(t*t+e*e);x.set(0,n)}function V(t){if(1==L.length)g.set(t.pageX,t.pageY);else{const e=Q(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);g.set(n,i)}v.subVectors(g,m).multiplyScalar(i.rotateSpeed);const e=i.domElement;P(2*Math.PI*v.x/e.clientHeight),T(2*Math.PI*v.y/e.clientHeight),m.copy(g)}function R(t){if(1===L.length)y.set(t.pageX,t.pageY);else{const e=Q(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);y.set(n,i)}w.subVectors(y,b).multiplyScalar(i.panSpeed),_(w.x,w.y),b.copy(y)}function H(t){const e=Q(t),n=t.pageX-e.x,a=t.pageY-e.y,o=Math.sqrt(n*n+a*a);S.set(0,o),E.set(0,Math.pow(S.y/x.y,i.zoomSpeed)),U(E.y),x.copy(S)}function k(t){!1!==i.enabled&&(0===L.length&&(i.domElement.setPointerCapture(t.pointerId),i.domElement.addEventListener("pointermove",F),i.domElement.addEventListener("pointerup",G)),function(t){L.push(t)}(t),"touch"===t.pointerType?function(t){switch(K(t),L.length){case 1:switch(i.touches.ONE){case e.TOUCH.ROTATE:if(!1===i.enableRotate)return;I(),o=a.TOUCH_ROTATE;break;case e.TOUCH.PAN:if(!1===i.enablePan)return;j(),o=a.TOUCH_PAN;break;default:o=a.NONE}break;case 2:switch(i.touches.TWO){case e.TOUCH.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;i.enableZoom&&N(),i.enablePan&&j(),o=a.TOUCH_DOLLY_PAN;break;case e.TOUCH.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;i.enableZoom&&N(),i.enableRotate&&I(),o=a.TOUCH_DOLLY_ROTATE;break;default:o=a.NONE}break;default:o=a.NONE}o!==a.NONE&&i.dispatchEvent(l)}(t):function(t){let n;switch(t.button){case 0:n=i.mouseButtons.LEFT;break;case 1:n=i.mouseButtons.MIDDLE;break;case 2:n=i.mouseButtons.RIGHT;break;default:n=-1}switch(n){case e.MOUSE.DOLLY:if(!1===i.enableZoom)return;!function(t){x.set(t.clientX,t.clientY)}(t),o=a.DOLLY;break;case e.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enablePan)return;B(t),o=a.PAN}else{if(!1===i.enableRotate)return;D(t),o=a.ROTATE}break;case e.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enableRotate)return;D(t),o=a.ROTATE}else{if(!1===i.enablePan)return;B(t),o=a.PAN}break;default:o=a.NONE}o!==a.NONE&&i.dispatchEvent(l)}(t))}function F(t){!1!==i.enabled&&("touch"===t.pointerType?function(t){switch(K(t),o){case a.TOUCH_ROTATE:if(!1===i.enableRotate)return;V(t),i.update();break;case a.TOUCH_PAN:if(!1===i.enablePan)return;R(t),i.update();break;case a.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(t){i.enableZoom&&H(t),i.enablePan&&R(t)}(t),i.update();break;case a.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(t){i.enableZoom&&H(t),i.enableRotate&&V(t)}(t),i.update();break;default:o=a.NONE}}(t):function(t){switch(o){case a.ROTATE:if(!1===i.enableRotate)return;!function(t){g.set(t.clientX,t.clientY),v.subVectors(g,m).multiplyScalar(i.rotateSpeed);const e=i.domElement;P(2*Math.PI*v.x/e.clientHeight),T(2*Math.PI*v.y/e.clientHeight),m.copy(g),i.update()}(t);break;case a.DOLLY:if(!1===i.enableZoom)return;!function(t){S.set(t.clientX,t.clientY),E.subVectors(S,x),E.y>0?U(O()):E.y<0&&C(O()),x.copy(S),i.update()}(t);break;case a.PAN:if(!1===i.enablePan)return;!function(t){y.set(t.clientX,t.clientY),w.subVectors(y,b).multiplyScalar(i.panSpeed),_(w.x,w.y),b.copy(y),i.update()}(t)}}(t))}function G(t){q(t),0===L.length&&(i.domElement.releasePointerCapture(t.pointerId),i.domElement.removeEventListener("pointermove",F),i.domElement.removeEventListener("pointerup",G)),i.dispatchEvent(d),o=a.NONE}function Y(t){q(t)}function W(t){!1!==i.enabled&&!1!==i.enableZoom&&o===a.NONE&&(t.preventDefault(),i.dispatchEvent(l),function(t){t.deltaY<0?C(O()):t.deltaY>0&&U(O()),i.update()}(t),i.dispatchEvent(d))}function Z(t){!1!==i.enabled&&!1!==i.enablePan&&function(t){let e=!1;switch(t.code){case i.keys.UP:_(0,i.keyPanSpeed),e=!0;break;case i.keys.BOTTOM:_(0,-i.keyPanSpeed),e=!0;break;case i.keys.LEFT:_(i.keyPanSpeed,0),e=!0;break;case i.keys.RIGHT:_(-i.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),i.update())}(t)}function X(t){!1!==i.enabled&&t.preventDefault()}function q(t){delete A[t.pointerId];for(let e=0;e<L.length;e++)if(L[e].pointerId==t.pointerId)return void L.splice(e,1)}function K(t){let n=A[t.pointerId];void 0===n&&(n=new e.Vector2,A[t.pointerId]=n),n.set(t.pageX,t.pageY)}function Q(t){const e=t.pointerId===L[0].pointerId?L[1]:L[0];return A[e.pointerId]}i.domElement.addEventListener("contextmenu",X),i.domElement.addEventListener("pointerdown",k),i.domElement.addEventListener("pointercancel",Y),i.domElement.addEventListener("wheel",W,{passive:!1}),this.update()}}e.UniformsLib.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new e.Vector2(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},e.ShaderLib.line={uniforms:e.UniformsUtils.merge([e.UniformsLib.common,e.UniformsLib.fog,e.UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class h extends e.ShaderMaterial{constructor(t){super({type:"LineMaterial",uniforms:e.UniformsUtils.clone(e.ShaderLib.line.uniforms),vertexShader:e.ShaderLib.line.vertexShader,fragmentShader:e.ShaderLib.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(t){!0===t?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set(t){Boolean(t)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===t?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)},set:function(t){Boolean(t)!==Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===t?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(t)}}const p=new e.Box3,f=new e.Vector3;class m extends e.InstancedBufferGeometry{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new e.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new e.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(t){const e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(t){let n;t instanceof Float32Array?n=t:Array.isArray(t)&&(n=new Float32Array(t));const i=new e.InstancedInterleavedBuffer(n,6,1);return this.setAttribute("instanceStart",new e.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceEnd",new e.InterleavedBufferAttribute(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t){let n;t instanceof Float32Array?n=t:Array.isArray(t)&&(n=new Float32Array(t));const i=new e.InstancedInterleavedBuffer(n,6,1);return this.setAttribute("instanceColorStart",new e.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceColorEnd",new e.InterleavedBufferAttribute(i,3,3)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new e.WireframeGeometry(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new e.Box3);const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;void 0!==t&&void 0!==n&&(this.boundingBox.setFromBufferAttribute(t),p.setFromBufferAttribute(n),this.boundingBox.union(p))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new e.Sphere),null===this.boundingBox&&this.computeBoundingBox();const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;if(void 0!==t&&void 0!==n){const e=this.boundingSphere.center;this.boundingBox.getCenter(e);let i=0;for(let a=0,o=t.count;a<o;a++)f.fromBufferAttribute(t,a),i=Math.max(i,e.distanceToSquared(f)),f.fromBufferAttribute(n,a),i=Math.max(i,e.distanceToSquared(f));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}}class g extends m{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setPositions(n),this}setColors(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setColors(n),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}const v=new e.Vector3,b=new e.Vector3,y=new e.Vector4,w=new e.Vector4,x=new e.Vector4,S=new e.Vector3,E=new e.Matrix4,L=new e.Line3,A=new e.Vector3,O=new e.Box3,P=new e.Sphere,T=new e.Vector4;let z,M,_,U;function C(t,e,n){return T.set(0,0,-e,1).applyMatrix4(t.projectionMatrix),T.multiplyScalar(1/T.w),T.x=U/n.width,T.y=U/n.height,T.applyMatrix4(t.projectionMatrixInverse),T.multiplyScalar(1/T.w),Math.abs(Math.max(T.x,T.y))}class D extends e.Mesh{constructor(t=new m,e=new h({color:16777215*Math.random()})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,n=t.attributes.instanceStart,i=t.attributes.instanceEnd,a=new Float32Array(2*n.count);for(let t=0,e=0,o=n.count;t<o;t++,e+=2)v.fromBufferAttribute(n,t),b.fromBufferAttribute(i,t),a[e]=0===e?0:a[e-1],a[e+1]=a[e]+v.distanceTo(b);const o=new e.InstancedInterleavedBuffer(a,2,1);return t.setAttribute("instanceDistanceStart",new e.InterleavedBufferAttribute(o,1,0)),t.setAttribute("instanceDistanceEnd",new e.InterleavedBufferAttribute(o,1,1)),this}raycast(t,n){const i=this.material.worldUnits,a=t.camera;null!==a||i||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const o=void 0!==t.params.Line2&&t.params.Line2.threshold||0;z=t.ray;const r=this.matrixWorld,s=this.geometry,c=this.material;let l,d;if(U=c.linewidth+o,M=s.attributes.instanceStart,_=s.attributes.instanceEnd,null===s.boundingSphere&&s.computeBoundingSphere(),P.copy(s.boundingSphere).applyMatrix4(r),i)l=.5*U;else{l=C(a,Math.max(a.near,P.distanceToPoint(z.origin)),c.resolution)}if(P.radius+=l,!1!==z.intersectsSphere(P)){if(null===s.boundingBox&&s.computeBoundingBox(),O.copy(s.boundingBox).applyMatrix4(r),i)d=.5*U;else{d=C(a,Math.max(a.near,O.distanceToPoint(z.origin)),c.resolution)}O.expandByScalar(d),!1!==z.intersectsBox(O)&&(i?function(t,n){for(let i=0,a=M.count;i<a;i++){L.start.fromBufferAttribute(M,i),L.end.fromBufferAttribute(_,i);const a=new e.Vector3,o=new e.Vector3;z.distanceSqToSegment(L.start,L.end,o,a),o.distanceTo(a)<.5*U&&n.push({point:o,pointOnLine:a,distance:z.origin.distanceTo(o),object:t,face:null,faceIndex:i,uv:null,uv2:null})}}(this,n):function(t,n,i){const a=n.projectionMatrix,o=t.material.resolution,r=t.matrixWorld,s=t.geometry,c=s.attributes.instanceStart,l=s.attributes.instanceEnd,d=-n.near;z.at(1,x),x.w=1,x.applyMatrix4(n.matrixWorldInverse),x.applyMatrix4(a),x.multiplyScalar(1/x.w),x.x*=o.x/2,x.y*=o.y/2,x.z=0,S.copy(x),E.multiplyMatrices(n.matrixWorldInverse,r);for(let n=0,s=c.count;n<s;n++){if(y.fromBufferAttribute(c,n),w.fromBufferAttribute(l,n),y.w=1,w.w=1,y.applyMatrix4(E),w.applyMatrix4(E),y.z>d&&w.z>d)continue;if(y.z>d){const t=y.z-w.z,e=(y.z-d)/t;y.lerp(w,e)}else if(w.z>d){const t=w.z-y.z,e=(w.z-d)/t;w.lerp(y,e)}y.applyMatrix4(a),w.applyMatrix4(a),y.multiplyScalar(1/y.w),w.multiplyScalar(1/w.w),y.x*=o.x/2,y.y*=o.y/2,w.x*=o.x/2,w.y*=o.y/2,L.start.copy(y),L.start.z=0,L.end.copy(w),L.end.z=0;const s=L.closestPointToPointParameter(S,!0);L.at(s,A);const u=e.MathUtils.lerp(y.z,w.z,s),h=u>=-1&&u<=1,p=S.distanceTo(A)<.5*U;if(h&&p){L.start.fromBufferAttribute(c,n),L.end.fromBufferAttribute(l,n),L.start.applyMatrix4(r),L.end.applyMatrix4(r);const a=new e.Vector3,o=new e.Vector3;z.distanceSqToSegment(L.start,L.end,o,a),i.push({point:o,pointOnLine:a,distance:z.origin.distanceTo(o),object:t,face:null,faceIndex:n,uv:null,uv2:null})}}}(this,a,n))}}}class B extends e.LineSegments{constructor(t,n,i,a,o=4473924,r=8947848){o=new e.Color(o),r=new e.Color(r);const s=Math.round(t/n);i=Math.round(i/a)*a/2;const c=[],l=[];let d=0;for(let e=-1*(t=s*n/2);e<=t;e+=n){c.push(e,0,-1*i,e,0,i);const t=0===e?o:r;t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3,t.toArray(l,d),d+=3}for(let e=-1*i;e<=i;e+=a){c.push(-1*t,0,e,t,0,e);const n=0===e?o:r;n.toArray(l,d),d+=3,n.toArray(l,d),d+=3,n.toArray(l,d),d+=3,n.toArray(l,d),d+=3}const u=new e.BufferGeometry;u.setAttribute("position",new e.Float32BufferAttribute(c,3)),u.setAttribute("color",new e.Float32BufferAttribute(l,3));super(u,new e.LineBasicMaterial({vertexColors:!0,toneMapped:!1}))}}function I(t,n,i,a){const o=function(t,n,i){t*=.5,n*=.5,i*=.5;const a=new e.BufferGeometry,o=[];return o.push(-t,-n,-i,-t,n,-i,-t,n,-i,t,n,-i,t,n,-i,t,-n,-i,t,-n,-i,-t,-n,-i,-t,-n,i,-t,n,i,-t,n,i,t,n,i,t,n,i,t,-n,i,t,-n,i,-t,-n,i,-t,-n,-i,-t,-n,i,-t,n,-i,-t,n,i,t,n,-i,t,n,i,t,-n,-i,t,-n,i),a.setAttribute("position",new e.Float32BufferAttribute(o,3)),a}(t,n,i),r=new e.LineSegments(o,new e.LineDashedMaterial({color:new e.Color(a),dashSize:3,gapSize:1}));return r.computeLineDistances(),r}class j{constructor(t){var n,i,a;if(this.parser=new s,this.backgroundColor=14737632,this.travelColor=10027008,this.extrusionColor=65280,this.renderExtrusion=!0,this.renderTravel=!1,this.singleLayerMode=!1,this.initialCameraPosition=[-100,400,450],this.debug=!1,this.allowDragNDrop=!1,this.disposables=[],this.scene=new e.Scene,this.scene.background=new e.Color(this.backgroundColor),this.canvas=t.canvas,this.targetId=t.targetId,this.endLayer=t.endLayer,this.startLayer=t.startLayer,this.topLayerColor=t.topLayerColor,this.lastSegmentColor=t.lastSegmentColor,this.lineWidth=t.lineWidth,this.buildVolume=t.buildVolume,this.initialCameraPosition=null!==(n=t.initialCameraPosition)&&void 0!==n?n:this.initialCameraPosition,this.debug=null!==(i=t.debug)&&void 0!==i?i:this.debug,this.allowDragNDrop=null!==(a=t.allowDragNDrop)&&void 0!==a?a:this.allowDragNDrop,console.info("Using THREE r"+e.REVISION),console.debug("opts",t),this.targetId&&console.warn("`targetId` is deprecated and will removed in the future. Use `canvas` instead."),!this.canvas&&!this.targetId)throw Error("Set either opts.canvas or opts.targetId");if(this.canvas)this.renderer=new e.WebGLRenderer({canvas:this.canvas,preserveDrawingBuffer:!0});else{const t=document.getElementById(this.targetId);if(!t)throw new Error("Unable to find element "+this.targetId);this.renderer=new e.WebGLRenderer({preserveDrawingBuffer:!0}),this.canvas=this.renderer.domElement,t.appendChild(this.canvas)}this.camera=new e.PerspectiveCamera(25,this.canvas.offsetWidth/this.canvas.offsetHeight,10,5e3),this.camera.position.fromArray(this.initialCameraPosition);const o=this.camera.far,r=.8*o;this.scene.fog=new e.Fog(this.scene.background,r,o),this.resize(),this.controls=new u(this.camera,this.renderer.domElement),this.animate(),this.allowDragNDrop&&this._enableDropHandler()}get layers(){return this.parser.layers}get maxLayerIndex(){var t;return(null!==(t=this.endLayer)&&void 0!==t?t:this.layers.length)-1}get minLayerIndex(){var t;return this.singleLayerMode?this.maxLayerIndex:(null!==(t=this.startLayer)&&void 0!==t?t:0)-1}animate(){requestAnimationFrame((()=>this.animate())),this.renderer.render(this.scene,this.camera)}processGCode(t){this.parser.parseGCode(t),this.render()}render(){for(var t,n;this.scene.children.length>0;)this.scene.remove(this.scene.children[0]);for(;this.disposables.length>0;)this.disposables.pop().dispose();if(this.debug){const t=new e.AxesHelper(Math.max(this.buildVolume.x/2,this.buildVolume.y/2)+20);this.scene.add(t)}this.buildVolume&&this.drawBuildVolume(),this.group=new e.Group,this.group.name="gcode";const i={x:0,y:0,z:0,e:0};for(let a=0;a<this.layers.length&&!(a>this.maxLayerIndex);a++){const o={extrusion:[],travel:[],z:i.z},r=this.layers[a];for(const t of r.commands)if("g0"==t.gcode||"g1"==t.gcode){const e=t,n={x:void 0!==e.params.x?e.params.x:i.x,y:void 0!==e.params.y?e.params.y:i.y,z:void 0!==e.params.z?e.params.z:i.z,e:void 0!==e.params.e?e.params.e:i.e};if(a>=this.minLayerIndex){const t=e.params.e>0;(t&&this.renderExtrusion||!t&&this.renderTravel)&&this.addLineSegment(o,i,n,t)}e.params.x&&(i.x=e.params.x),e.params.y&&(i.y=e.params.y),e.params.z&&(i.z=e.params.z),e.params.e&&(i.e=e.params.e)}if(this.renderExtrusion){const i=Math.round(80*a/this.layers.length),r=new e.Color(`hsl(0, 0%, ${i}%)`).getHex();if(a==this.layers.length-1){const e=null!==(t=this.topLayerColor)&&void 0!==t?t:r,i=null!==(n=this.lastSegmentColor)&&void 0!==n?n:e,a=o.extrusion.splice(-3);this.addLine(o.extrusion,e);const s=o.extrusion.splice(-3);this.addLine([...s,...a],i)}else this.addLine(o.extrusion,r)}this.renderTravel&&this.addLine(o.travel,this.travelColor)}this.group.quaternion.setFromEuler(new e.Euler(-Math.PI/2,0,0)),this.buildVolume?this.group.position.set(-this.buildVolume.x/2,0,this.buildVolume.y/2):this.group.position.set(-100,0,100),this.scene.add(this.group),this.renderer.render(this.scene,this.camera)}drawBuildVolume(){this.scene.add(new B(this.buildVolume.x,10,this.buildVolume.y,10));const t=I(this.buildVolume.x,this.buildVolume.z,this.buildVolume.y,8947848);t.position.setY(this.buildVolume.z/2),this.scene.add(t)}clear(){this.startLayer=1,this.endLayer=1/0,this.singleLayerMode=!1,this.parser=new s}resize(){const[t,e]=[this.canvas.offsetWidth,this.canvas.offsetHeight];this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(t,e,!1)}addLineSegment(t,e,n,i){(i?t.extrusion:t.travel).push(e.x,e.y,e.z,n.x,n.y,n.z)}addLine(t,n){if("number"==typeof this.lineWidth&&this.lineWidth>0)return void this.addThickLine(t,n);const i=new e.BufferGeometry;i.setAttribute("position",new e.Float32BufferAttribute(t,3)),this.disposables.push(i);const a=new e.LineBasicMaterial({color:n});this.disposables.push(a);const o=new e.LineSegments(i,a);this.group.add(o)}addThickLine(t,e){if(!t.length)return;const n=new g;this.disposables.push(n);const i=new h({color:e,linewidth:this.lineWidth/(1e3*window.devicePixelRatio)});this.disposables.push(i),n.setPositions(t);const a=new D(n,i);this.group.add(a)}_enableDropHandler(){this.canvas.addEventListener("dragover",(t=>{t.stopPropagation(),t.preventDefault(),t.dataTransfer.dropEffect="copy",this.canvas.classList.add("dragging")})),this.canvas.addEventListener("dragleave",(t=>{t.stopPropagation(),t.preventDefault(),this.canvas.classList.remove("dragging")})),this.canvas.addEventListener("drop",(t=>n(this,void 0,void 0,(function*(){t.stopPropagation(),t.preventDefault(),this.canvas.classList.remove("dragging");const e=t.dataTransfer.files[0];this.clear(),yield this._readFromStream(e.stream()),this.render()}))))}_readFromStream(t){var e,i;return n(this,void 0,void 0,(function*(){const n=t.getReader();let a,o="",r=0;do{a=yield n.read(),r+=null!==(i=null===(e=a.value)||void 0===e?void 0:e.length)&&void 0!==i?i:0;const t=(s=a.value,new TextDecoder("utf-8").decode(s)),c=t.lastIndexOf("\n"),l=t.slice(0,c);this.parser.parseGCode(o+l),o=t.slice(c)}while(!a.done);var s;console.debug("read from stream",r)}))}}const N=j;t.WebGLPreview=j,t.init=N,Object.defineProperty(t,"__esModule",{value:!0})}));
